Index: src/test/java/TestMsg.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.memory.dao.MsgDAO;\r\nimport com.memory.dao.PersonDao;\r\nimport com.memory.dao.UserDAO;\r\nimport com.memory.pojo.Msg;\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.test.context.ContextConfiguration;\r\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\r\n\r\nimport javax.annotation.Resource;\r\nimport java.sql.Timestamp;\r\nimport java.util.Date;\r\n\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@ContextConfiguration(\"classpath:appliciationContext.xml\")\r\npublic class TestMsg {\r\n    @Autowired\r\n    private MsgDAO msgDAO;\r\n    @Autowired\r\n    private UserDAO userDAO;\r\n\r\n    @Test\r\n    public void testMsgDAO() {\r\n        Timestamp time = new Timestamp(new Date().getTime());\r\n        Msg msg = new Msg();\r\n        msg.setMsgContent(\"xxx\");\r\n        msg.setMsgDatetime(time);\r\n        msg.setSendUser(userDAO.get(7));\r\n        msg.setReceiveUser(userDAO.get(6));\r\n        msgDAO.add(msg);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/TestMsg.java	(revision 766577deafa2bf23b38f530c763ace25101cd84f)
+++ src/test/java/TestMsg.java	(date 1587976804925)
@@ -1,7 +1,9 @@
+import com.memory.controller.MsgController;
 import com.memory.dao.MsgDAO;
 import com.memory.dao.PersonDao;
 import com.memory.dao.UserDAO;
 import com.memory.pojo.Msg;
+import com.memory.utils.JsonResult;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -19,6 +21,8 @@
     private MsgDAO msgDAO;
     @Autowired
     private UserDAO userDAO;
+    @Autowired
+    private MsgController msgController;
 
     @Test
     public void testMsgDAO() {
@@ -28,11 +32,22 @@
         msg.setMsgDatetime(time);
         msg.setSendUser(userDAO.get(7));
         msg.setReceiveUser(userDAO.get(6));
+        msg.setMsgAction(1);
         msgDAO.add(msg);
+        System.out.println(msg);
 
+    }
 
+    @Test
+    public void testUnreadMsg() {
+        JsonResult jsonResult = msgController.getUnReadMsgList(10   );
+        System.out.println(jsonResult.getMsg()+" "+jsonResult.getStatus()+" "+jsonResult.getData());
+    }
 
-
+    @Test
+    public void testAllMsg() {
+        JsonResult jsonResult = msgController.getAllMsgList(7,6);
+        System.out.println(jsonResult.getMsg()+" "+jsonResult.getStatus()+" "+jsonResult.getData());
     }
 
 }
Index: src/main/resources/spring-service.xml
===================================================================
--- src/main/resources/spring-service.xml	(revision 766577deafa2bf23b38f530c763ace25101cd84f)
+++ src/main/resources/spring-service.xml	(revision 766577deafa2bf23b38f530c763ace25101cd84f)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:aop="http://www.springframework.org/schema/aop"
-       xmlns:tx="http://www.springframework.org/schema/tx"
-       xmlns:mvc="http://www.springframework.org/schema/mvc"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-        http://www.springframework.org/schema/beans/spring-beans.xsd
-       http://www.springframework.org/schema/context
-       http://www.springframework.org/schema/context/spring-context.xsd
-       http://www.springframework.org/schema/aop
-       http://www.springframework.org/schema/aop/spring-aop.xsd
-        http://www.springframework.org/schema/tx
-       http://www.springframework.org/schema/tx/spring-tx.xsd
-       http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
-    <!-- 扫描service下的包-->
-    <context:component-scan base-package="com.memory.service"></context:component-scan>
-
-</beans>
\ No newline at end of file
Index: src/main/resources/spring-dao.xml
===================================================================
--- src/main/resources/spring-dao.xml	(revision 766577deafa2bf23b38f530c763ace25101cd84f)
+++ src/main/resources/spring-dao.xml	(revision 766577deafa2bf23b38f530c763ace25101cd84f)
@@ -1,79 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:aop="http://www.springframework.org/schema/aop"
-       xmlns:tx="http://www.springframework.org/schema/tx"
-       xsi:schemaLocation="
-        http://www.springframework.org/schema/beans
-        http://www.springframework.org/schema/beans/spring-beans.xsd
-       http://www.springframework.org/schema/context
-       http://www.springframework.org/schema/context/spring-context.xsd
-       http://www.springframework.org/schema/aop
-       http://www.springframework.org/schema/aop/spring-aop.xsd
-        http://www.springframework.org/schema/tx
-       http://www.springframework.org/schema/tx/spring-tx.xsd">
-
-    <!-- 加载配置文件-->
-    <context:property-placeholder location="classpath:db-mysql.properties"></context:property-placeholder>
-    <!-- 配置数据源-->
-    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
-          destroy-method="close" lazy-init="false">
-        <property name="driverClassName" value="${jdbc.driverClassName}" />
-        <property name="url" value="${jdbc.url}" />
-        <property name="username" value="${jdbc.username}" />
-        <property name="password" value="${jdbc.password}" />
-
-        <property name="initialSize" value="1" />
-        <property name="maxActive" value="50" />
-        <property name="maxWait" value="30000" />
-        <property name="filters" value="stat,wall" />
-        <property name="timeBetweenEvictionRunsMillis" value="3000" />
-        <property name="minEvictableIdleTimeMillis" value="300000" />
-        <property name="validationQuery" value="SELECT 'x'" />
-        <property name="testWhileIdle" value="true" />
-        <property name="testOnBorrow" value="false" />
-        <property name="testOnReturn" value="false" />
-        <property name="poolPreparedStatements" value="true" />
-        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
-    </bean>
-    <!--配置sessionFactory-->
-    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
-        <property name="dataSource" ref="dataSource"></property>
-<!--        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>-->
-<!--        <property name="mappingLocations" value="classpath:com/memory/pojo/*.hbm.xml"></property>-->
-        <property name="packagesToScan" value="com.memory.pojo"></property>
-        <property name="hibernateProperties">
-            <props>
-                <prop key="hibernate.hbm2ddl.auto">create</prop>
-                <prop key="dialect">org.hibernate.dialect.MySQL5Dialect</prop>
-                <prop key="show_sql">true</prop>
-                <prop key="format_sql">true</prop>
-            </props>
-        </property>
-    </bean>
-    <!-- 配置事务管理-->
-    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
-        <property name="sessionFactory" ref="sessionFactory"></property>
-    </bean>
-
-    <!-- 开启注解事务管理 -->
-    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
-    <!-- 配置事务属性-->
-<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
-<!--        <tx:attributes>-->
-<!--            <tx:method name="get*" read-only="true"/>-->
-<!--            <tx:method name="*"/>-->
-<!--        </tx:attributes>-->
-<!--    </tx:advice>-->
-
-    <!--配置hibernatetemplate-->
-    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
-        <property name="sessionFactory" ref="sessionFactory"></property>
-    </bean>
-    <!-- 配置事务切点，并把切点和事务属性关联起来 -->
-<!--    <aop:config proxy-target-class="true">-->
-<!--    <aop:pointcut expression="execution(* com.memory.dao.*.*(..))" id="txPointcut"/>-->
-<!--    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>-->
-<!--</aop:config>-->
-</beans>
\ No newline at end of file
Index: src/main/java/com/memory/controller/HelloController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.memory.controller;\r\n\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n@Controller\r\npublic class HelloController {\r\n\r\n    @RequestMapping(\"/hello\")\r\n    public String hello(Model model) {\r\n        model.addAttribute(\"msg\",\"hello\");\r\n        return \"hello\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/memory/controller/HelloController.java	(revision 766577deafa2bf23b38f530c763ace25101cd84f)
+++ src/main/java/com/memory/controller/HelloController.java	(date 1587976805080)
@@ -1,11 +1,15 @@
 package com.memory.controller;
 
+import com.memory.service.PerosonService;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.RequestMapping;
 
 @Controller
 public class HelloController {
+    @Autowired
+    private PerosonService perosonService;
 
     @RequestMapping("/hello")
     public String hello(Model model) {
Index: src/main/webapp/index.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%--\r\n  Created by IntelliJ IDEA.\r\n  User: a1725\r\n  Date: 2020/4/19\r\n  Time: 21:11\r\n  To change this template use File | Settings | File Templates.\r\n--%>\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<html>\r\n<head>\r\n    <title>Title</title>\r\n</head>\r\n<body>\r\n    ${msg}\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/index.jsp	(revision 766577deafa2bf23b38f530c763ace25101cd84f)
+++ src/main/webapp/index.jsp	(date 1587976805215)
@@ -13,4 +13,5 @@
 <body>
     ${msg}
 </body>
+
 </html>
